name: Build release binaries

on:
  workflow_dispatch:

jobs:
  check_if_org_member:
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/viamrobotics/canon:amd64
    steps:
      - name: Check if organization member
        id: is_organization_member
        uses: jamessingleton/is-organization-member@1.0.1
        with:
          organization: viamrobotics
          username: ${{ github.actor }}
          token:  ${{ secrets.GITHUB_TOKEN }}

      - name: cancelling
        uses: andymckay/cancel-action@0.2
        if: |
          steps.is_organization_member.outputs.result == 'false'

  build_macos:
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, ARM64, macOS]
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-apple-darwin
            platform: macosx_arm64
          - target: x86_64-apple-darwin
            platform: macosx_x86_64
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}
      - name: Setup build directory
        run: mkdir builds
      - name: Build
        run: |
          cargo build --release --target=${{ matrix.target }}
      - name: Copy
        run: cp target/${{ matrix.target }}/release/libviam_rust_utils.dylib builds/libviam_rust_utils-${{ matrix.platform }}.dylib
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: builds

  build_linux:
    if: github.repository_owner == 'viamrobotics'
    runs-on: [self-hosted, x64]
    container:
      image: ghcr.io/cross-rs/${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            platform: linux_aarch64
            image: aarch64-unknown-linux-gnu:main-centos
          - target: x86_64-unknown-linux-gnu
            platform: linux_x86_64
            image: x86_64-unknown-linux-gnu:main-centos
          - target: arm-unknown-linux-gnueabihf
            platform: linux_armv6l
            image: arm-unknown-linux-gnueabihf:main
    steps:
      - uses: actions/checkout@v3
      - name: Setup rust toolchain
        shell: bash
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source "$HOME/.cargo/env"
          rustup target add ${{ matrix.target }}
      - name: Setup build directory
        run: mkdir builds
      - name: Build
        shell: bash
        run: |
          source "$HOME/.cargo/env"
          cargo build --release --target=${{ matrix.target }}
      - name: Copy
        run: cp target/${{ matrix.target }}/release/libviam_rust_utils.so builds/libviam_rust_utils-${{ matrix.platform }}.so
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: builds
          path: builds
